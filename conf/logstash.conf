input {
	file {
		path => "/var/log/openstack/openstack-daily.log"
		type => openstack_logs
		tags => [ "nova", "neutron", "glance", "ceilometer", "cinder", "heat", "keystone"]
	}

	file {
		path => "/var/log/yum.log"
		type => system_logs
		tags => ["yum"]
	}
}

filter {
if [type] == "openstack_logs" {
  if "nova" in [tags] {
        grok {
		break_on_match => true
                match => [
                        "message", "%{HOSTNAME:openstack_hostname} %{TIMESTAMP_ISO8601:timestamp}%{OPENSTACK_PID:openstack_pid} %{LOGLEVEL1:openstack_loglevel} %{OPENSTACK_PROG:openstack_program}%{REQ_LIST} %{ID} %{GREEDYDATA:openstack_instance_action}",
                      #  "message", "%{HOSTNAME:openstack_hostname} %{TIMESTAMP_ISO8601:timestamp}%{OPENSTACK_PID:openstack_pid} %{LOGLEVEL1:openstack_loglevel} %{OPENSTACK_PROG:openstack_program}%{REQ_LIST} %{GREEDYDATA:openstack_message}",
                        "message", "%{HOSTNAME:openstack_hostname} %{TIMESTAMP_ISO8601:timestamp}%{OPENSTACK_PID:openstack_pid} %{LOGLEVEL1:openstack_loglevel} %{OPENSTACK_PROG:openstack_program}%{NOTSPACE} %{RESOURCE_DISK_RAM:Free_disk_ram}",
                        "message", "%{HOSTNAME:openstack_hostname} %{TIMESTAMP_ISO8601:timestamp}%{OPENSTACK_PID:openstack_pid} %{LOGLEVEL1:openstack_loglevel} %{OPENSTACK_PROG:openstack_program}%{NOTSPACE} %{RESOURCE_CPU:Free_vcpus}",
                        "message", "%{HOSTNAME:openstack_hostname} %{TIMESTAMP_ISO8601:timestamp}%{OPENSTACK_PID:openstack_pid} %{LOGLEVEL1:openstack_loglevel} %{OPENSTACK_PROG:openstack_program}%{REQ_LIST} %{COMPUTE_SERVICE:compute_service_record}",
                        "message", "%{HOSTNAME:openstack_hostname} %{TIMESTAMP_ISO8601:timestamp}%{OPENSTACK_PID:openstack_pid} %{LOGLEVEL1:openstack_loglevel} %{OPENSTACK_PROG:openstack_program}%{REQ_LIST} %{WORD} %{NOTSPACE:openstack_image_id} %{NOTSPACE} %{NOTSPACE:openstack_image_location} %{GREEDYDATA:image_message}"
                ]
        }
# Drop messages without any information
  if ([message] =~"Compute_service record") or [message] =~"Auditing locally" {
	drop {}
  }
}

#  if "neutron" in [tags] {
#    grok {
#	match => { "message" => "%{HOSTNAME:openstack_hostname} %{TIMESTAMP_ISO8601:timestamp}%{OPENSTACK_PID:openstack_pid} %{LOGLEVEL1:openstack_loglevel} %{OPENSTACK_PROG:openstack_program}%{REQ_LIST} %{GREEDYDATA:openstack_message}"}
#    }
#   }

# Catch remaining messages with "all-catching" filter
  if "_grokparsefailure" in [tags] {
	grok {
		match => { "message" => "%{HOSTNAME:openstack_hostname} %{TIMESTAMP_ISO8601:timestamp}%{OPENSTACK_PID:openstack_pid} %{LOGLEVEL:openstack_loglevel} %{OPENSTACK_PROG:openstack_program}%{GREEDYDATA:openstack_message}"}
		add_tag => "unmatched_event"
	}
  }
}

  if [type] == "system_logs" {
	if "yum" in [tags] {
		grok {
			match => { "message" => "%{SYSLOGTIMESTAMP:yum_timestamp} %{YUM_ACTION:yum_action}%{GREEDYDATA:yum_package}"}
		}
	}
  }
}

output {
	elasticsearch { 
		host => "localhost:9200" 
		protocol => "http"
		cluster => "vagrant_elasticsearch"
		manage_template => false
	}

# Output some metrics
  if "Free VCPUS" in [Free_vcpus] {
	graphite {
		host => "192.168.11.18"
		metrics => [ "%{openstack_hostname}-free-vcpus", "%{Free_vcpus_count}"]
	}
  }

  if "Free ram" in [Free_disk_ram] {
	graphite {
		host => "192.168.11.18"
		metrics => [ "%{openstack_hostname}-free-ram", "%{Free_disk_ram_count}"]
	}
  }

  if "Free disk " in [Free_disk_ram] {
	graphite {
		host => "192.168.11.18"
		metrics => [ "%{openstack_hostname}-free-disk", "%{Free_disk_ram_count}"]
	}
}


	stdout { 
		codec => rubydebug 
	 }

	file { 
		path => "/var/log/openstack/%{openstack_hostname}-%{+YYYY-MM-dd}.log" 
		codec => "rubydebug"
	}
}

